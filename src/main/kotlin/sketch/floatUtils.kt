package sketch

import processing.core.PApplet

fun PApplet.fill(arg0: Number) = this.fill(arg0.toFloat())
fun PApplet.fill(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.fill(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.fill(arg0: Number, arg1: Number, arg2: Number) = this.fill(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.fill(arg0: Number, arg1: Number) = this.fill(arg0.toFloat(), arg1.toFloat())
fun PApplet.fill(arg0: Int, arg1: Number) = this.fill(arg0, arg1.toFloat())
fun PApplet.rotate(arg0: Number) = this.rotate(arg0.toFloat())
fun PApplet.rotate(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.rotate(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.filter(arg0: Int, arg1: Number) = this.filter(arg0, arg1.toFloat())
fun PApplet.random(arg0: Number, arg1: Number) = this.random(arg0.toFloat(), arg1.toFloat())
fun PApplet.random(arg0: Number) = this.random(arg0.toFloat())
fun PApplet.scale(arg0: Number, arg1: Number) = this.scale(arg0.toFloat(), arg1.toFloat())
fun PApplet.scale(arg0: Number, arg1: Number, arg2: Number) = this.scale(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.scale(arg0: Number) = this.scale(arg0.toFloat())
fun PApplet.frameRate(arg0: Number) = this.frameRate(arg0.toFloat())
fun PApplet.line(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.line(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.line(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.line(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.image(arg0: processing.core.PImage, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Int, arg6: Int, arg7: Int, arg8: Int) = this.image(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5, arg6, arg7, arg8)
fun PApplet.image(arg0: processing.core.PImage, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.image(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.image(arg0: processing.core.PImage, arg1: Number, arg2: Number) = this.image(arg0, arg1.toFloat(), arg2.toFloat())
fun PApplet.noise(arg0: Number, arg1: Number, arg2: Number) = this.noise(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.noise(arg0: Number, arg1: Number) = this.noise(arg0.toFloat(), arg1.toFloat())
fun PApplet.noise(arg0: Number) = this.noise(arg0.toFloat())
fun PApplet.noiseDetail(arg0: Int, arg1: Number) = this.noiseDetail(arg0, arg1.toFloat())
fun PApplet.createFont(arg0: String, arg1: Number, arg2: Boolean, arg3: CharArray) = this.createFont(arg0, arg1.toFloat(), arg2, arg3)
fun PApplet.createFont(arg0: String, arg1: Number, arg2: Boolean) = this.createFont(arg0, arg1.toFloat(), arg2)
fun PApplet.createFont(arg0: String, arg1: Number) = this.createFont(arg0, arg1.toFloat())
fun PApplet.color(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.color(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.color(arg0: Number, arg1: Number, arg2: Number) = this.color(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.color(arg0: Number) = this.color(arg0.toFloat())
fun PApplet.color(arg0: Number, arg1: Number) = this.color(arg0.toFloat(), arg1.toFloat())
fun PApplet.lerpColor(arg0: Int, arg1: Int, arg2: Number) = this.lerpColor(arg0, arg1, arg2.toFloat())
fun PApplet.normal(arg0: Number, arg1: Number, arg2: Number) = this.normal(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.attribPosition(arg0: String, arg1: Number, arg2: Number, arg3: Number) = this.attribPosition(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.attribNormal(arg0: String, arg1: Number, arg2: Number, arg3: Number) = this.attribNormal(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.vertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.vertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.vertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.vertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.vertex(arg0: Number, arg1: Number) = this.vertex(arg0.toFloat(), arg1.toFloat())
fun PApplet.vertex(arg0: Number, arg1: Number, arg2: Number) = this.vertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.clip(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.clip(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.bezierVertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number) = this.bezierVertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat())
fun PApplet.bezierVertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.bezierVertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.quadraticVertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.quadraticVertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.quadraticVertex(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.quadraticVertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.curveVertex(arg0: Number, arg1: Number, arg2: Number) = this.curveVertex(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.curveVertex(arg0: Number, arg1: Number) = this.curveVertex(arg0.toFloat(), arg1.toFloat())
fun PApplet.point(arg0: Number, arg1: Number, arg2: Number) = this.point(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.point(arg0: Number, arg1: Number) = this.point(arg0.toFloat(), arg1.toFloat())
fun PApplet.triangle(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.triangle(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.quad(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number) = this.quad(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat())
fun PApplet.rect(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.rect(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.rect(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.rect(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.rect(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number) = this.rect(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat())
fun PApplet.ellipse(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.ellipse(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.arc(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Int) = this.arc(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6)
fun PApplet.arc(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.arc(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.box(arg0: Number, arg1: Number, arg2: Number) = this.box(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.box(arg0: Number) = this.box(arg0.toFloat())
fun PApplet.sphere(arg0: Number) = this.sphere(arg0.toFloat())
fun PApplet.bezierPoint(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.bezierPoint(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.bezierTangent(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.bezierTangent(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.bezier(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number, arg9: Number, arg10: Number, arg11: Number) = this.bezier(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat(), arg9.toFloat(), arg10.toFloat(), arg11.toFloat())
fun PApplet.bezier(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number) = this.bezier(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat())
fun PApplet.curvePoint(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.curvePoint(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.curveTangent(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.curveTangent(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.curveTightness(arg0: Number) = this.curveTightness(arg0.toFloat())
fun PApplet.curve(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number) = this.curve(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat())
fun PApplet.curve(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number, arg9: Number, arg10: Number, arg11: Number) = this.curve(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat(), arg9.toFloat(), arg10.toFloat(), arg11.toFloat())
fun PApplet.shape(arg0: processing.core.PShape, arg1: Number, arg2: Number) = this.shape(arg0, arg1.toFloat(), arg2.toFloat())
fun PApplet.shape(arg0: processing.core.PShape, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.shape(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.textFont(arg0: processing.core.PFont, arg1: Number) = this.textFont(arg0, arg1.toFloat())
fun PApplet.textLeading(arg0: Number) = this.textLeading(arg0.toFloat())
fun PApplet.textSize(arg0: Number) = this.textSize(arg0.toFloat())
fun PApplet.text(arg0: Int, arg1: Number, arg2: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat())
fun PApplet.text(arg0: String, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.text(arg0: CharArray, arg1: Int, arg2: Int, arg3: Number, arg4: Number, arg5: Number) = this.text(arg0, arg1, arg2, arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.text(arg0: String, arg1: Number, arg2: Number, arg3: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.text(arg0: CharArray, arg1: Int, arg2: Int, arg3: Number, arg4: Number) = this.text(arg0, arg1, arg2, arg3.toFloat(), arg4.toFloat())
fun PApplet.text(arg0: String, arg1: Number, arg2: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat())
fun PApplet.text(arg0: Char, arg1: Number, arg2: Number, arg3: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.text(arg0: Char, arg1: Number, arg2: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat())
fun PApplet.text(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.text(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.text(arg0: Number, arg1: Number, arg2: Number) = this.text(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.text(arg0: Int, arg1: Number, arg2: Number, arg3: Number) = this.text(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.translate(arg0: Number, arg1: Number) = this.translate(arg0.toFloat(), arg1.toFloat())
fun PApplet.translate(arg0: Number, arg1: Number, arg2: Number) = this.translate(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.rotateX(arg0: Number) = this.rotateX(arg0.toFloat())
fun PApplet.rotateY(arg0: Number) = this.rotateY(arg0.toFloat())
fun PApplet.rotateZ(arg0: Number) = this.rotateZ(arg0.toFloat())
fun PApplet.shearX(arg0: Number) = this.shearX(arg0.toFloat())
fun PApplet.shearY(arg0: Number) = this.shearY(arg0.toFloat())
fun PApplet.applyMatrix(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number, arg9: Number, arg10: Number, arg11: Number, arg12: Number, arg13: Number, arg14: Number, arg15: Number) = this.applyMatrix(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat(), arg9.toFloat(), arg10.toFloat(), arg11.toFloat(), arg12.toFloat(), arg13.toFloat(), arg14.toFloat(), arg15.toFloat())
fun PApplet.applyMatrix(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.applyMatrix(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.camera(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number) = this.camera(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat())
fun PApplet.ortho(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.ortho(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.ortho(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.ortho(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.perspective(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.perspective(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.frustum(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.frustum(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.screenX(arg0: Number, arg1: Number) = this.screenX(arg0.toFloat(), arg1.toFloat())
fun PApplet.screenX(arg0: Number, arg1: Number, arg2: Number) = this.screenX(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.screenY(arg0: Number, arg1: Number) = this.screenY(arg0.toFloat(), arg1.toFloat())
fun PApplet.screenY(arg0: Number, arg1: Number, arg2: Number) = this.screenY(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.screenZ(arg0: Number, arg1: Number, arg2: Number) = this.screenZ(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.modelX(arg0: Number, arg1: Number, arg2: Number) = this.modelX(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.modelY(arg0: Number, arg1: Number, arg2: Number) = this.modelY(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.modelZ(arg0: Number, arg1: Number, arg2: Number) = this.modelZ(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.strokeWeight(arg0: Number) = this.strokeWeight(arg0.toFloat())
fun PApplet.stroke(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.stroke(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.stroke(arg0: Number) = this.stroke(arg0.toFloat())
fun PApplet.stroke(arg0: Number, arg1: Number) = this.stroke(arg0.toFloat(), arg1.toFloat())
fun PApplet.stroke(arg0: Number, arg1: Number, arg2: Number) = this.stroke(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.stroke(arg0: Int, arg1: Number) = this.stroke(arg0, arg1.toFloat())
fun PApplet.tint(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.tint(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.tint(arg0: Number, arg1: Number, arg2: Number) = this.tint(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.tint(arg0: Number, arg1: Number) = this.tint(arg0.toFloat(), arg1.toFloat())
fun PApplet.tint(arg0: Number) = this.tint(arg0.toFloat())
fun PApplet.tint(arg0: Int, arg1: Number) = this.tint(arg0, arg1.toFloat())
fun PApplet.ambient(arg0: Number) = this.ambient(arg0.toFloat())
fun PApplet.ambient(arg0: Number, arg1: Number, arg2: Number) = this.ambient(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.specular(arg0: Number, arg1: Number, arg2: Number) = this.specular(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.specular(arg0: Number) = this.specular(arg0.toFloat())
fun PApplet.shininess(arg0: Number) = this.shininess(arg0.toFloat())
fun PApplet.emissive(arg0: Number) = this.emissive(arg0.toFloat())
fun PApplet.emissive(arg0: Number, arg1: Number, arg2: Number) = this.emissive(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.ambientLight(arg0: Number, arg1: Number, arg2: Number) = this.ambientLight(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.ambientLight(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.ambientLight(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.directionalLight(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.directionalLight(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.pointLight(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number) = this.pointLight(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat())
fun PApplet.spotLight(arg0: Number, arg1: Number, arg2: Number, arg3: Number, arg4: Number, arg5: Number, arg6: Number, arg7: Number, arg8: Number, arg9: Number, arg10: Number) = this.spotLight(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat(), arg5.toFloat(), arg6.toFloat(), arg7.toFloat(), arg8.toFloat(), arg9.toFloat(), arg10.toFloat())
fun PApplet.lightFalloff(arg0: Number, arg1: Number, arg2: Number) = this.lightFalloff(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.lightSpecular(arg0: Number, arg1: Number, arg2: Number) = this.lightSpecular(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.background(arg0: Number, arg1: Number) = this.background(arg0.toFloat(), arg1.toFloat())
fun PApplet.background(arg0: Number) = this.background(arg0.toFloat())
fun PApplet.background(arg0: Int, arg1: Number) = this.background(arg0, arg1.toFloat())
fun PApplet.background(arg0: Number, arg1: Number, arg2: Number, arg3: Number) = this.background(arg0.toFloat(), arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.background(arg0: Number, arg1: Number, arg2: Number) = this.background(arg0.toFloat(), arg1.toFloat(), arg2.toFloat())
fun PApplet.colorMode(arg0: Int, arg1: Number, arg2: Number, arg3: Number) = this.colorMode(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat())
fun PApplet.colorMode(arg0: Int, arg1: Number, arg2: Number, arg3: Number, arg4: Number) = this.colorMode(arg0, arg1.toFloat(), arg2.toFloat(), arg3.toFloat(), arg4.toFloat())
fun PApplet.colorMode(arg0: Int, arg1: Number) = this.colorMode(arg0, arg1.toFloat())